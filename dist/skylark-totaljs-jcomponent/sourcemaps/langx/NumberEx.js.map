{"version":3,"sources":["langx/NumberEx.js"],"names":["define","regexp","NP","Number","prototype","pluralize","zero","one","few","other","Array","num","this","value","indexOf","replace","text","format","toString","decimals","separator","separatorDecimal","dec","output","minus","substring","tmp","index","ENV","length","decimalseparator","undefined","i","padRight","MD","padLeft","t","e","async","fn","callback","number","setTimeout","add","inc","first","charCodeAt","is","val","parseFloat","floor","Math","pow","parseDate","offset","Date"],"mappings":"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","file":"../../langx/NumberEx.js","sourcesContent":["define([\r\n\t\"./regexp\"\r\n],function(regexp){\r\n\tvar NP = Number.prototype;\r\n\r\n\tvar\tthousandsseparator = ' ',\r\n\t\tdecimalseparator = '.' ;\r\n\r\n\tNP.pluralize = function(zero, one, few, other) {\r\n\r\n\t\tif (zero instanceof Array) {\r\n\t\t\tone = zero[1];\r\n\t\t\tfew = zero[2];\r\n\t\t\tother = zero[3];\r\n\t\t\tzero = zero[0];\r\n\t\t}\r\n\r\n\t\tvar num = this;\r\n\t\tvar value = '';\r\n\r\n\t\tif (num == 0)\r\n\t\t\tvalue = zero || '';\r\n\t\telse if (num == 1)\r\n\t\t\tvalue = one || '';\r\n\t\telse if (num > 1 && num < 5)\r\n\t\t\tvalue = few || '';\r\n\t\telse\r\n\t\t\tvalue = other;\r\n\r\n\t\treturn value.indexOf('#') === -1 ? value : value.replace(regexp.pluralize, function(text) {\r\n\t\t\treturn text === '##' ? num.format() : num.toString();\r\n\t\t});\r\n\t};\r\n\r\n\tNP.format = function(decimals, separator, separatorDecimal) {\r\n\r\n\t\tvar self = this;\r\n\t\tvar num = self.toString();\r\n\t\tvar dec = '';\r\n\t\tvar output = '';\r\n\t\tvar minus = num.substring(0, 1) === '-' ? '-' : '';\r\n\t\tif (minus)\r\n\t\t\tnum = num.substring(1);\r\n\r\n\t\tvar index = num.indexOf('.');\r\n\r\n\t\tif (typeof(decimals) === 'string') {\r\n\t\t\tvar tmp;\r\n\t\t\tif (decimals.substring(0, 1) === '[') {\r\n\t\t\t\ttmp = ENV(decimals.substring(1, decimals.length - 1));\r\n\t\t\t\tif (tmp) {\r\n\t\t\t\t\tdecimals = tmp.decimals;\r\n\t\t\t\t\tif (tmp.separator)\r\n\t\t\t\t\t\tseparator = tmp.separator;\r\n\t\t\t\t\tif (tmp.decimalseparator)\r\n\t\t\t\t\t\tseparatorDecimal = tmp.decimalseparator;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttmp = separator;\r\n\t\t\t\tseparator = decimals;\r\n\t\t\t\tdecimals = tmp;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (separator === undefined)\r\n\t\t\tseparator = thousandsseparator; //MD.thousandsseparator\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tdec = num.substring(index + 1);\r\n\t\t\tnum = num.substring(0, index);\r\n\t\t}\r\n\r\n\t\tindex = -1;\r\n\t\tfor (var i = num.length - 1; i >= 0; i--) {\r\n\t\t\tindex++;\r\n\t\t\tif (index > 0 && index % 3 === 0)\r\n\t\t\t\toutput = separator + output;\r\n\t\t\toutput = num[i] + output;\r\n\t\t}\r\n\r\n\t\tif (decimals || dec.length) {\r\n\t\t\tif (dec.length > decimals)\r\n\t\t\t\tdec = dec.substring(0, decimals || 0);\r\n\t\t\telse\r\n\t\t\t\tdec = dec.padRight(decimals || 0, '0');\r\n\t\t}\r\n\r\n\t\tif (dec.length && separatorDecimal === undefined)\r\n\t\t\tseparatorDecimal = MD.decimalseparator;\r\n\r\n\t\treturn minus + output + (dec.length ? separatorDecimal + dec : '');\r\n\t};\r\n\r\n\tNP.padLeft = function(t, e) {\r\n\t\treturn this.toString().padLeft(t, e || '0');\r\n\t};\r\n\r\n\tNP.padRight = function(t, e) {\r\n\t\treturn this.toString().padRight(t, e || '0');\r\n\t};\r\n\r\n\tNP.async = function(fn, callback) {\r\n\t\tvar number = this;\r\n\t\tif (number >= 0)\r\n\t\t\tfn(number, function() {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t(number - 1).async(fn, callback);\r\n\t\t\t\t}, 1);\r\n\t\t\t});\r\n\t\telse\r\n\t\t\tcallback && callback();\r\n\t\treturn number;\r\n\t};\r\n\r\n\tNP.add = NP.inc = function(value, decimals) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tif (value == null)\r\n\t\t\treturn self;\r\n\r\n\t\tif (typeof(value) === 'number')\r\n\t\t\treturn self + value;\r\n\r\n\t\tvar first = value.charCodeAt(0);\r\n\t\tvar is = false;\r\n\r\n\t\tif (first < 48 || first > 57) {\r\n\t\t\tis = true;\r\n\t\t\tvalue = value.substring(1);\r\n\t\t}\r\n\r\n\t\tvar length = value.length;\r\n\t\tvar num;\r\n\r\n\t\tif (value[length - 1] === '%') {\r\n\t\t\tvalue = value.substring(0, length - 1);\r\n\t\t\tif (is) {\r\n\t\t\t\tvar val = value.parseFloat();\r\n\t\t\t\tswitch (first) {\r\n\t\t\t\t\tcase 42:\r\n\t\t\t\t\t\tnum = self * ((self / 100) * val);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 43:\r\n\t\t\t\t\t\tnum = self + ((self / 100) * val);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 45:\r\n\t\t\t\t\t\tnum = self - ((self / 100) * val);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 47:\r\n\t\t\t\t\t\tnum = self / ((self / 100) * val);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn decimals !== undefined ? num.floor(decimals) : num;\r\n\t\t\t} else {\r\n\t\t\t\tnum = (self / 100) * value.parseFloat();\r\n\t\t\t\treturn decimals !== undefined ? num.floor(decimals) : num;\r\n\t\t\t}\r\n\r\n\t\t} else\r\n\t\t\tnum = value.parseFloat();\r\n\r\n\t\tswitch (first) {\r\n\t\t\tcase 42:\r\n\t\t\t\tnum = self * num;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 43:\r\n\t\t\t\tnum = self + num;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 45:\r\n\t\t\t\tnum = self - num;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 47:\r\n\t\t\t\tnum = self / num;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tnum = self;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn decimals !== undefined ? num.floor(decimals) : num;\r\n\t};\r\n\r\n\tNP.floor = function(decimals) {\r\n\t\treturn Math.floor(this * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n\t};\r\n\r\n\tNP.parseDate = function(offset) {\r\n\t\treturn new Date(this + (offset || 0));\r\n\t};\r\n\t\r\n});"]}