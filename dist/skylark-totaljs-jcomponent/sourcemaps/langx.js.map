{"version":3,"sources":["langx.js"],"names":["define","slangx","jc","regexp","now","statics","waits","window","Intl","Collator","compare","empties","array","object","fn","singletons","Object","freeze","langx","mixin","isFunction","isNumber","async","arr","done","item","shift","clearTimeout2","name","key","clearTimeout","undefined","clone","obj","path","TYPE_N","TYPE_S","CLONE","get","Date","getTime","PARSE","JSON","stringify","copy","a","b","keys","i","length","val","type","TYPE_O","Evented","guid","size","l","push","Math","random","toString","substring","join","hashCode","s","STRINGIFY","hash","charCodeAt","parse","value","date","c","$","html","MD","jsondate","isJSONDate","e","setTimeout2","timeout","limit","param","key2","setTimeout","singleton","def","Function","state","what","stateX","compress","fields","jsoncompress","tf","Array","indexOf","TYPE_FN","trim","wait","callback","interval","tkey","tmp","is","run","sleep","WAIT","clearInterval","Error","setInterval"],"mappings":"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","file":"../langx.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n\t\"./jc\",\r\n\t\"./_langx/regexp\",\r\n\t\"./_langx/now\",\r\n\t\"./_langx/ArrayEx\",\r\n\t\"./_langx/DateEx\",\r\n\t\"./_langx/NumberEx\",\r\n\t\"./_langx/StringEx\"\r\n],function(slangx,jc,regexp,now){\r\n\tvar statics = {};\r\n\tvar waits = {};\r\n\r\n\r\n\r\n\tfunction async(arr, fn, done) {\r\n\t\tvar item = arr.shift();\r\n\t\tif (item == null)\r\n\t\t\treturn done && done();\r\n\t\tfn(item, function() {\r\n\t\t\tasync(arr, fn, done);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction clone(obj, path) {\r\n\r\n\t\tvar type = typeof(obj);\r\n\t\tswitch (type) {\r\n\t\t\tcase TYPE_N:\r\n\t\t\tcase 'boolean':\r\n\t\t\t\treturn obj;\r\n\t\t\tcase TYPE_S:\r\n\t\t\t\treturn path ? obj : CLONE(get(obj), true);\r\n\t\t}\r\n\r\n\t\tif (obj == null)\r\n\t\t\treturn obj;\r\n\r\n\t\tif (obj instanceof Date)\r\n\t\t\treturn new Date(obj.getTime());\r\n\r\n\t\treturn PARSE(JSON.stringify(obj));\r\n\t}\r\n\r\n\tfunction copy(a, b) {\r\n\t\tvar keys = Object.keys(a);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tvar key = keys[i];\r\n\t\t\tvar val = a[key];\r\n\t\t\tvar type = typeof(val);\r\n\t\t\tb[key] = type === TYPE_O ? val ? CLONE(val) : val : val;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * Generates a unique String.\r\n\t *\r\n\t */\r\n\tfunction guid(size) {\r\n\t\tif (!size)\r\n\t\t\tsize = 10;\r\n\t\tvar l = ((size / 10) >> 0) + 1;\r\n\t\tvar b = [];\r\n\t\tfor (var i = 0; i < l; i++)\r\n\t\t\tb.push(Math.random().toString(36).substring(2));\r\n\t\treturn b.join('').substring(0, size);\r\n\t}\r\n\r\n\t/*\r\n\t *  Generates Number hash sum.\r\n\t *\r\n\t */\r\n\tfunction hashCode(s) {\r\n\t\tif (!s)\r\n\t\t\treturn 0;\r\n\t\tvar type = typeof(s);\r\n\t\tif (type === TYPE_N)\r\n\t\t\treturn s;\r\n\t\telse if (type === 'boolean')\r\n\t\t\treturn s ? 1 : 0;\r\n\t\telse if (s instanceof Date)\r\n\t\t\treturn s.getTime();\r\n\t\telse if (type === TYPE_O)\r\n\t\t\ts = STRINGIFY(s);\r\n\t\tvar hash = 0, i, char;\r\n\t\tif (!s.length)\r\n\t\t\treturn hash;\r\n\t\tvar l = s.length;\r\n\t\tfor (i = 0; i < l; i++) {\r\n\t\t\tchar = s.charCodeAt(i);\r\n\t\t\thash = ((hash << 5) - hash) + char;\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/*\r\n\t *  Parses JSON String to Object.\r\n\t *\r\n\t */\r\n\tfunction parse(value, date) {\r\n\r\n\t\t// Is selector?\r\n\t\tvar c = value.substring(0, 1);\r\n\t\tif (c === '#' || c === '.')\r\n\t\t\treturn parse($(value).html(), date); // PARSE\r\n\r\n\t\tif (date === undefined) {\r\n\t\t\tdate = MD.jsondate;\r\n\t\t} \r\n\t\ttry {\r\n\t\t\treturn JSON.parse(value, function(key, value) {\r\n\t\t\t\treturn typeof(value) === TYPE_S && date && value.isJSONDate() ? new Date(value) : value;\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tvar LCOMPARER = window.Intl ? window.Intl.Collator().compare : function(a, b) {\r\n\t\treturn a.localeCompare(b);\r\n\t};\r\n\r\n   /**\r\n   * Wait for a feature\r\n   * @param  {String|Function} path/fn  \r\n   * @param  {Function} callback  \r\n   * @param  {Number} interval  Optional, in milliseconds (default: 500)\r\n   * @param  {Number} timeout Optional, a timeout (default: 0 - disabled) \r\n   * @return {Boolean}  \r\n   */ \r\n\tfunction wait(fn, callback, interval, timeout) { // W.WAIT = \r\n\t\tvar key = ((Math.random() * 10000) >> 0).toString(16);\r\n\t\tvar tkey = timeout > 0 ? key + '_timeout' : 0;\r\n\r\n\t\tif (typeof(callback) === TYPE_N) {\r\n\t\t\tvar tmp = interval;\r\n\t\t\tinterval = callback;\r\n\t\t\tcallback = tmp;\r\n\t\t}\r\n\r\n\t\tvar is = typeof(fn) === TYPE_S;\r\n\t\tvar run = false;\r\n\r\n\t\tif (is) {\r\n\t\t\tvar result = get(fn);\r\n\t\t\tif (result)\r\n\t\t\t\trun = true;\r\n\t\t} else if (fn())\r\n\t\t\trun = true;\r\n\r\n\t\tif (run) {\r\n\t\t\tcallback(null, function(sleep) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tWAIT(fn, callback, interval, timeout);\r\n\t\t\t\t}, sleep || 1);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (tkey) {\r\n\t\t\twaits[tkey] = setTimeout(function() {\r\n\t\t\t\tclearInterval(waits[key]);\r\n\t\t\t\tdelete waits[tkey];\r\n\t\t\t\tdelete waits[key];\r\n\t\t\t\tcallback(new Error('Timeout.'));\r\n\t\t\t}, timeout);\r\n\t\t}\r\n\r\n\t\twaits[key] = setInterval(function() {\r\n\r\n\t\t\tif (is) {\r\n\t\t\t\tvar result = get(fn);\r\n\t\t\t\tif (result == null)\r\n\t\t\t\t\treturn;\r\n\t\t\t} else if (!fn())\r\n\t\t\t\treturn;\r\n\r\n\t\t\tclearInterval(waits[key]);\r\n\t\t\tdelete waits[key];\r\n\r\n\t\t\tif (tkey) {\r\n\t\t\t\tclearTimeout(waits[tkey]);\r\n\t\t\t\tdelete waits[tkey];\r\n\t\t\t}\r\n\r\n\t\t\tcallback && callback(null, function(sleep) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tWAIT(fn, callback, interval);\r\n\t\t\t\t}, sleep || 1);\r\n\t\t\t});\r\n\r\n\t\t}, interval || 500);\r\n\t};\r\n\r\n\r\n\r\n\t/*\r\n\t * Serializes Object to JSON.\r\n\t * @param\r\n\t * @param \r\n\t * @param {Array|Object} fields\r\n\t */\r\n\tfunction stringify(obj, compress, fields) {\r\n\t\tif(compress === undefined) {\r\n\t\t\tcompress = MD.jsoncompress;\r\n\t\t} \r\n\t\tvar tf = typeof(fields);\r\n\t\treturn JSON.stringify(obj, function(key, value) {\r\n\r\n\t\t\tif (!key) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\r\n\t\t\tif (fields) {\r\n\t\t\t\tif (fields instanceof Array) {\r\n\t\t\t\t\tif (fields.indexOf(key) === -1) {\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (tf === TYPE_FN) {\r\n\t\t\t\t\tif (!fields(key, value)){\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (fields[key] === false)\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\tif (compress === true) {\r\n\t\t\t\tvar t = typeof(value);\r\n\t\t\t\tif (t === TYPE_S) {\r\n\t\t\t\t\tvalue = value.trim();\r\n\t\t\t\t\treturn value ? value : undefined;\r\n\t\t\t\t} else if (value === false || value == null)\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t});\r\n\t}\r\n\r\n\tvar empties = {\r\n\t\tarray : [],\r\n\t\tobject : {},\r\n\t\tfn :  function() {}\r\n\t};\r\n\r\n\tvar singletons = {};\r\n\r\n\tfunction singleton(name, def) { //W.SINGLETON \r\n\t\treturn singletons[name] || (singletons[name] = (new Function('return ' + (def || '{}')))());\r\n\t};\r\n\r\n\r\n\tif (Object.freeze) {\r\n\t\tObject.freeze(empties.array);\r\n\t\tObject.freeze(empties.object);\r\n\t}\r\n\r\n\r\n   /**\r\n   * improves setTimeout method. This method cancels a previous unexecuted call.\r\n   * @param  {String} name \r\n   * @param  {Function(name)} fn \r\n   * @param  {Number} timeout \r\n   * @param  {Number} limit  Optional, a maximum clear limit (default: 0)\r\n   * @param  {Object} param  Optional, additional argument\r\n   * @return {Number} \r\n   */\r\n\tfunction setTimeout2(name, fn, timeout, limit, param) { //W.setTimeout2 = \r\n\t\tvar key = ':' + name;\r\n\t\tif (limit > 0) {\r\n\t\t\tvar key2 = key + ':limit';\r\n\t\t\tif (statics[key2] >= limit) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tstatics[key2] = (statics[key2] || 0) + 1;\r\n\t\t\tstatics[key] && clearTimeout(statics[key]);\r\n\t\t\treturn statics[key] = setTimeout(function(param) {\r\n\t\t\t\tstatics[key2] = undefined;\r\n\t\t\t\tfn && fn(param);\r\n\t\t\t}, timeout, param);\r\n\t\t}\r\n\t\tstatics[key] && clearTimeout(statics[key]);\r\n\t\treturn statics[key] = setTimeout(fn, timeout, param);\r\n\t}\r\n\r\n   /**\r\n   * clears a registered by setTimeout2().\r\n   * @param  {String} name \r\n   * @return {Boolean} \r\n   */\r\n\tfunction clearTimeout2(name) { // W.clearTimeout2 = \r\n\t\tvar key = ':' + name;\r\n\t\tif (statics[key]) {\r\n\t\t\tclearTimeout(statics[key]);\r\n\t\t\tstatics[key] = undefined;\r\n\t\t\tstatics[key + ':limit'] && (statics[key + ':limit'] = undefined);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t// what:\r\n\t// 1. valid\r\n\t// 2. dirty\r\n\t// 3. reset\r\n\t// 4. update\r\n\t// 5. set\r\n\tfunction state(arr, type, what) {\r\n\t\tif (arr && arr.length) {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tfor (var i = 0, length = arr.length; i < length; i++) {\r\n\t\t\t\t\tarr[i].stateX(type, what);\r\n\t\t\t\t}\r\n\t\t\t}, 2, arr);\r\n\t\t}\r\n\t}\r\n\r\n\treturn jc.langx = {\r\n\r\n\t\tmixin : slangx.mixin,\r\n\t\tisFunction : slangx.isFunction,\r\n\t\tisNumber : slangx.isNumber,\r\n\r\n\t\tasync:async,\r\n\t\tclearTimeout2:clearTimeout2,\r\n\t\tclone:clone,\r\n\t\tcopy:copy,\r\n\t\tempties:empties,\r\n\t\tEvented : slangx.Evented,\r\n\t\tguid:guid,\r\n\t\thashCode:hashCode,\r\n\t\tnow:now,\r\n\t\tparse:parse,\r\n\t\tregexp:regexp,\r\n\t\tsetTimeout2:setTimeout2,\r\n\t\tsingleton:singleton,\r\n\t\tstate:state,\r\n\t\tstringify:stringify,\r\n\t\twait:wait\r\n\t};\r\n\r\n});"]}