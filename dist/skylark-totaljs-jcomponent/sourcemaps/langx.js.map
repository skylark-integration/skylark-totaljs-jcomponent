{"version":3,"sources":["langx.js"],"names":["define","slangx","jc","localCompare","regexp","now","statics","MD","jsoncompress","jsondate","clone","obj","path","get","Date","getTime","parse","JSON","stringify","value","date","c","substring","$","html","undefined","key","isString","isJSONDate","e","compress","fields","tf","Array","indexOf","langx","isFunction","trim","empties","array","object","fn","singletons","Object","freeze","each","Evented","extend","hoster","isNumber","isObject","isPlainObject","klass","mixin","result","topic","Xhr","async","arr","done","item","shift","clearTimeout2","name","clearTimeout","copy","a","b","keys","i","length","val","type","TYPE_O","guid","size","l","push","Math","random","toString","join","hashCode","s","hash","charCodeAt","setTimeout2","timeout","limit","param","key2","setTimeout","singleton","def","Function"],"mappings":"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","file":"../langx.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n\t\"./jc\",\r\n\t\"./langx/localCompare\",\r\n\t\"./langx/regexp\",\r\n\t\"./langx/now\",\r\n\t\"./langx/statics\",\r\n\t\"./langx/ArrayEx\",\r\n\t\"./langx/DateEx\",\r\n\t\"./langx/NumberEx\",\r\n\t\"./langx/StringEx\"\r\n],function(slangx,jc,localCompare,regexp,now,statics){\r\n\r\n\tvar MD = {\r\n\t\tjsoncompress : false,\r\n\t\tjsondate : true\r\n\t};\r\n\r\n\tfunction async(arr, fn, done) {\r\n\t\tvar item = arr.shift();\r\n\t\tif (item == null) {\r\n\t\t\treturn done && done();\r\n\t\t}\r\n\t\tfn(item, function() {\r\n\t\t\tasync(arr, fn, done);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction clone(obj, path) {\r\n\r\n\t\tvar type = typeof(obj);\r\n\t\tswitch (type) {\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'boolean':\r\n\t\t\t\treturn obj;\r\n\t\t\tcase 'string':\r\n\t\t\t\treturn path ? obj : clone(get(obj), true);\r\n\t\t}\r\n\r\n\t\tif (obj == null)\r\n\t\t\treturn obj;\r\n\r\n\t\tif (obj instanceof Date)\r\n\t\t\treturn new Date(obj.getTime());\r\n\r\n\t\treturn parse(JSON.stringify(obj));\r\n\t}\r\n\r\n\tfunction copy(a, b) {\r\n\t\tvar keys = Object.keys(a);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tvar key = keys[i];\r\n\t\t\tvar val = a[key];\r\n\t\t\tvar type = typeof(val);\r\n\t\t\tb[key] = type === TYPE_O ? val ? clone(val) : val : val;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * Generates a unique String.\r\n\t *\r\n\t */\r\n\tfunction guid(size) {\r\n\t\tif (!size)\r\n\t\t\tsize = 10;\r\n\t\tvar l = ((size / 10) >> 0) + 1;\r\n\t\tvar b = [];\r\n\t\tfor (var i = 0; i < l; i++)\r\n\t\t\tb.push(Math.random().toString(36).substring(2));\r\n\t\treturn b.join('').substring(0, size);\r\n\t}\r\n\r\n\t/*\r\n\t *  Generates Number hash sum.\r\n\t *\r\n\t */\r\n\tfunction hashCode(s) {\r\n\t\tif (!s)\r\n\t\t\treturn 0;\r\n\t\tvar type = typeof(s);\r\n\t\tif (type === 'number')\r\n\t\t\treturn s;\r\n\t\telse if (type === 'boolean')\r\n\t\t\treturn s ? 1 : 0;\r\n\t\telse if (s instanceof Date)\r\n\t\t\treturn s.getTime();\r\n\t\telse if (type === 'object')\r\n\t\t\ts = stringify(s);\r\n\t\tvar hash = 0, i, char;\r\n\t\tif (!s.length)\r\n\t\t\treturn hash;\r\n\t\tvar l = s.length;\r\n\t\tfor (i = 0; i < l; i++) {\r\n\t\t\tchar = s.charCodeAt(i);\r\n\t\t\thash = ((hash << 5) - hash) + char;\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/*\r\n\t *  Parses JSON String to Object.\r\n\t *\r\n\t */\r\n\tfunction parse(value, date) { // PARSE\r\n\r\n\t\t// Is selector?\r\n\t\tvar c = value.substring(0, 1);\r\n\t\tif (c === '#' || c === '.')\r\n\t\t\treturn parse($(value).html(), date); // PARSE\r\n\r\n\t\tif (date === undefined) {\r\n\t\t\tdate = MD.jsondate;\r\n\t\t} \r\n\t\ttry {\r\n\t\t\treturn JSON.parse(value, function(key, value) {\r\n\t\t\t\treturn slangx.isString(value)  && date && value.isJSONDate() ? new Date(value) : value;\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/*\r\n\t * Serializes Object to JSON.\r\n\t * @param\r\n\t * @param \r\n\t * @param {Array|Object} fields\r\n\t */\r\n\tfunction stringify(obj, compress, fields) { //STRINGIFY\r\n\t\tif(compress === undefined) {\r\n\t\t\tcompress = MD.jsoncompress;\r\n\t\t} \r\n\t\tvar tf = typeof(fields);\r\n\t\treturn JSON.stringify(obj, function(key, value) {\r\n\r\n\t\t\tif (!key) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\r\n\t\t\tif (fields) {\r\n\t\t\t\tif (fields instanceof Array) {\r\n\t\t\t\t\tif (fields.indexOf(key) === -1) {\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (langx.isFunction(tf)) {\r\n\t\t\t\t\tif (!fields(key, value)){\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (fields[key] === false)\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\tif (compress === true) {\r\n\t\t\t\t//var t = typeof(value);\r\n\t\t\t\tif (langx.isString(value)) {\r\n\t\t\t\t\tvalue = value.trim();\r\n\t\t\t\t\treturn value ? value : undefined;\r\n\t\t\t\t} else if (value === false || value == null)\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t});\r\n\t}\r\n\r\n\tvar empties = {\r\n\t\tarray : [],\r\n\t\tobject : {},\r\n\t\tfn :  function() {}\r\n\t};\r\n\r\n\tvar singletons = {};\r\n\r\n\tfunction singleton(name, def) { //W.SINGLETON \r\n\t\treturn singletons[name] || (singletons[name] = (new Function('return ' + (def || '{}')))());\r\n\t};\r\n\r\n\r\n\tif (Object.freeze) {\r\n\t\tObject.freeze(empties.array);\r\n\t\tObject.freeze(empties.object);\r\n\t}\r\n\r\n\r\n   /**\r\n   * improves setTimeout method. This method cancels a previous unexecuted call.\r\n   * @param  {String} name \r\n   * @param  {Function(name)} fn \r\n   * @param  {Number} timeout \r\n   * @param  {Number} limit  Optional, a maximum clear limit (default: 0)\r\n   * @param  {Object} param  Optional, additional argument\r\n   * @return {Number} \r\n   */\r\n\tfunction setTimeout2(name, fn, timeout, limit, param) { //W.setTimeout2 = \r\n\t\tvar key = ':' + name;\r\n\t\tif (limit > 0) {\r\n\t\t\tvar key2 = key + ':limit';\r\n\t\t\tif (statics[key2] >= limit) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tstatics[key2] = (statics[key2] || 0) + 1;\r\n\t\t\tstatics[key] && clearTimeout(statics[key]);\r\n\t\t\treturn statics[key] = setTimeout(function(param) {\r\n\t\t\t\tstatics[key2] = undefined;\r\n\t\t\t\tfn && fn(param);\r\n\t\t\t}, timeout, param);\r\n\t\t}\r\n\t\tstatics[key] && clearTimeout(statics[key]);\r\n\t\treturn statics[key] = setTimeout(fn, timeout, param);\r\n\t}\r\n\r\n   /**\r\n   * clears a registered by setTimeout2().\r\n   * @param  {String} name \r\n   * @return {Boolean} \r\n   */\r\n\tfunction clearTimeout2(name) { // W.clearTimeout2 = \r\n\t\tvar key = ':' + name;\r\n\t\tif (statics[key]) {\r\n\t\t\tclearTimeout(statics[key]);\r\n\t\t\tstatics[key] = undefined;\r\n\t\t\tstatics[key + ':limit'] && (statics[key + ':limit'] = undefined);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\treturn jc.langx = {\r\n\t\teach    : slangx.each,\r\n\t\tEvented : slangx.Evented,\r\n\t\textend : slangx.extend,\r\n\t\thoster  : slangx.hoster,\r\n\t\tisFunction : slangx.isFunction,\r\n\t\tisNumber : slangx.isNumber,\r\n\t\tisObject : slangx.isObject,\r\n\t\tisPlainObject: slangx.isPlainObject,\r\n\t\tisString : slangx.isString,\r\n\t\tklass : slangx.klass,\r\n\t\tmixin : slangx.mixin,\r\n\t\tresult : slangx.result,\r\n\t\ttopic : slangx.topic,\r\n\t\tXhr : slangx.Xhr,\r\n\r\n\t\tasync:async,\r\n\t\tclearTimeout2:clearTimeout2,\r\n\t\tclone:clone,\r\n\t\tcopy:copy,\r\n\t\tempties:empties,\r\n\t\tEvented : slangx.Evented,\r\n\t\tguid:guid,\r\n\t\thashCode:hashCode,\r\n\t\tlocalCompare : localCompare,\r\n\t\tnow:now,\r\n\t\tparse:parse,\r\n\t\tregexp:regexp,\r\n\t\tresult: slangx.result,\r\n\t\tsetTimeout2:setTimeout2,\r\n\t\tsingleton:singleton,\r\n\t\tstringify:stringify,\r\n\t\tstatics : statics\r\n\t};\r\n\r\n});"]}