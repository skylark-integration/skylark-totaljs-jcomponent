{"version":3,"sources":["Scope.js"],"names":["define","jc","langx","topic","Scope","SCP","prototype","unwatch","path","fn","off","this","_id","watch","init","on","reset","timeout","RESET","default","DEFAULT","set","value","setx","push","update","get","getx","can","except","CAN","errors","highlight","remove","arr","M","components","all","i","length","a","scope","isolated","Object","keys","proxy","substring","e","element","find","setTimeout2","cleaner2","FIND","selector","many","callback","SETTER","b","c","d","f","g","RECONFIGURE","name"],"mappings":";;;;;;;AAAAA,QACC,OACA,UACA,WACC,SAASC,EAAGC,EAAMC,GAOnB,SAASC,KAIT,IAAIC,EAAMD,EAAME,UA4FhB,OA1FAD,EAAIE,QAAU,SAASC,EAAMC,GAG5B,OADAN,EAAMO,IAAI,QADCC,KACcC,IAAM,SADpBD,KACmCH,MAAQA,EAAO,IAAMA,EAAO,IAAKC,GADpEE,MAKZN,EAAIQ,MAAQ,SAASL,EAAMC,EAAIK,GAG9B,OADAX,EAAMY,GAAG,QADEJ,KACaC,IAAM,SADnBD,KACkCH,MAAQA,EAAO,IAAMA,EAAO,IAAKC,EAAIK,EADvEH,MAAAA,MAKZN,EAAIW,MAAQ,SAASR,EAAMS,GAK1B,OAJIT,EAAO,IACVS,EAAUT,EACVA,EAAO,IAEDU,MAAMP,KAAKH,KAAO,KAAOA,GAASA,EAAO,KAAMS,IAGvDZ,EAAIc,QAAU,SAASX,EAAMS,GAK5B,OAJIT,EAAO,IACVS,EAAUT,EACVA,EAAO,IAEDY,QAAQT,KAAKH,KAAO,KAAOA,GAAc,KAAMS,IAGvDZ,EAAIgB,IAAM,SAASb,EAAMc,EAAOL,EAASD,GACxC,OAAOO,KAAKZ,KAAKH,MAAQA,EAAO,IAAMA,EAAO,IAAKc,EAAOL,EAASD,IAGnEX,EAAImB,KAAO,SAAShB,EAAMc,EAAOL,EAASD,GACzC,OAAOQ,KAAKb,KAAKH,MAAQA,EAAO,IAAMA,EAAO,IAAKc,EAAOL,EAASD,IAGnEX,EAAIoB,OAAS,SAASjB,EAAMS,EAASD,GACpC,OAAOS,OAAOd,KAAKH,MAAQA,EAAO,IAAMA,EAAO,IAAKS,EAASD,IAG9DX,EAAIqB,IAAM,SAASlB,GAClB,OAAOmB,KAAKhB,KAAKH,MAAQA,EAAO,IAAMA,EAAO,MAG9CH,EAAIuB,IAAM,SAASC,GAClB,OAAOC,IAAInB,KAAKH,KAAO,KAAMqB,IAG9BxB,EAAI0B,OAAS,SAASF,EAAQG,GAC7B,OAAOD,OAAOpB,KAAKH,KAAO,KAAMqB,EAAQG,IAGzC3B,EAAI4B,OAAS,WAIZ,IAHA,IACIC,EAAMC,EAAEC,WAAWC,IAEdC,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAAK,EAChCE,EAAIN,EAAII,IACVG,OAASD,EAAEC,MAAMjC,OALTG,KAKuBH,MAAQgC,EAAEP,QAAO,GAGnD,GARWtB,KAQF+B,SAAU,CAClBR,EAAMS,OAAOC,KAAKC,OAClB,IAASP,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAAK,CACpC,IAAIE,GAAAA,EAAIN,EAAII,IACNQ,UAAU,EAZPnC,KAYeH,KAAK+B,UAZpB5B,KAYqCH,aACtCqC,MAAML,IAIhBrC,EAAMO,IAAI,QAjBCC,KAiBcC,IAAM,UAC/B,IAAImC,EAlBOpC,KAkBEqC,QACbD,EAAEE,KAAK,KAAKvC,MACZqC,EAAErC,MACFqC,EAAEd,SACF/B,EAAMgD,YAAY,WAAYC,SAAU,MAGzC9C,EAAI+C,KAAO,SAASC,EAAUC,EAAMC,EAAUtC,GAC7C,OAAON,KAAKqC,QAAQI,KAAKC,EAAUC,EAAMC,EAAUtC,IAGpDZ,EAAImD,OAAS,SAAShB,EAAGiB,EAAGC,EAAGC,EAAGZ,EAAGa,EAAGC,GACvC,OAAOlD,KAAKqC,QAAQQ,OAAOhB,EAAGiB,EAAGC,EAAGC,EAAGZ,EAAGa,EAAGC,IAG9CxD,EAAIyD,YAAc,SAAST,EAAUU,GACpC,OAAOpD,KAAKqC,QAAQc,YAAYT,EAAUU,IAGpC9D,EAAGG,MAAQA","file":"../Scope.js","sourcesContent":["define([\r\n\t\"./jc\",\r\n\t\"./langx\",\r\n\t\"./topic\"\r\n],function(jc,langx,topic){\r\n\t// ===============================================================\r\n\t// SCOPE\r\n\t// scopes can simplify paths in HTML declaration. In other words: \r\n\t// scopes can reduce paths in all nested components.\r\n\t// ===============================================================\r\n\r\n\tfunction Scope() {\r\n\r\n\t}\r\n\r\n\tvar SCP = Scope.prototype;\r\n\r\n\tSCP.unwatch = function(path, fn) {\r\n\t\tvar self = this;\r\n\t\ttopic.off('scope' + self._id + '#watch', self.path + (path ? '.' + path : ''), fn); // OFF\r\n\t\treturn self;\r\n\t};\r\n\r\n\tSCP.watch = function(path, fn, init) {\r\n\t\tvar self = this;\r\n\t\ttopic.on('scope' + self._id + '#watch', self.path + (path ? '.' + path : ''), fn, init, self); // ON \r\n\t\treturn self;\r\n\t};\r\n\r\n\tSCP.reset = function(path, timeout) {\r\n\t\tif (path > 0) {\r\n\t\t\ttimeout = path;\r\n\t\t\tpath = '';\r\n\t\t}\r\n\t\treturn RESET(this.path + '.' + (path ? + path : '*'), timeout);\r\n\t};\r\n\r\n\tSCP.default = function(path, timeout) {\r\n\t\tif (path > 0) {\r\n\t\t\ttimeout = path;\r\n\t\t\tpath = '';\r\n\t\t}\r\n\t\treturn DEFAULT(this.path + '.' + (path ? path : '*'), timeout);\r\n\t};\r\n\r\n\tSCP.set = function(path, value, timeout, reset) {\r\n\t\treturn setx(this.path + (path ? '.' + path : ''), value, timeout, reset); // SET\r\n\t};\r\n\r\n\tSCP.push = function(path, value, timeout, reset) {\r\n\t\treturn push(this.path + (path ? '.' + path : ''), value, timeout, reset); // PUSH\r\n\t};\r\n\r\n\tSCP.update = function(path, timeout, reset) {\r\n\t\treturn update(this.path + (path ? '.' + path : ''), timeout, reset); // UPDATE\r\n\t};\r\n\r\n\tSCP.get = function(path) {\r\n\t\treturn getx(this.path + (path ? '.' + path : '')); // GET\r\n\t};\r\n\r\n\tSCP.can = function(except) {\r\n\t\treturn CAN(this.path + '.*', except);\r\n\t};\r\n\r\n\tSCP.errors = function(except, highlight) {\r\n\t\treturn errors(this.path + '.*', except, highlight); // ERRORS\r\n\t};\r\n\r\n\tSCP.remove = function() {\r\n\t\tvar self = this;\r\n\t\tvar arr = M.components.all;//M.components;\r\n\r\n\t\tfor (var i = 0; i < arr.length; i++) {\r\n\t\t\tvar a = arr[i];\r\n\t\t\ta.scope && a.scope.path === self.path && a.remove(true);\r\n\t\t}\r\n\r\n\t\tif (self.isolated) {\r\n\t\t\tarr = Object.keys(proxy);\r\n\t\t\tfor (var i = 0; i < arr.length; i++) {\r\n\t\t\t\tvar a = arr[i];\r\n\t\t\t\tif (a.substring(0, self.path.length) === self.path)\r\n\t\t\t\t\tdelete proxy[a];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttopic.off('scope' + self._id + '#watch'); // OFF\r\n\t\tvar e = self.element;\r\n\t\te.find('*').off();\r\n\t\te.off();\r\n\t\te.remove();\r\n\t\tlangx.setTimeout2('$cleaner', cleaner2, 100);\r\n\t};\r\n\r\n\tSCP.FIND = function(selector, many, callback, timeout) {\r\n\t\treturn this.element.FIND(selector, many, callback, timeout);\r\n\t};\r\n\r\n\tSCP.SETTER = function(a, b, c, d, e, f, g) {\r\n\t\treturn this.element.SETTER(a, b, c, d, e, f, g);\r\n\t};\r\n\r\n\tSCP.RECONFIGURE = function(selector, name) {\r\n\t\treturn this.element.RECONFIGURE(selector, name);\r\n\t};\r\n\r\n\treturn jc.Scope = Scope;\r\n\t\r\n})"]}