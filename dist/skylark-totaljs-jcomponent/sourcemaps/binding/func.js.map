{"version":3,"sources":["binding/func.js"],"names":["define","pathmaker","REGFNPLUGIN","regfnplugin","v","l","length","substring","rebinddecode","val","replace","isValue","indexOf","test","func","exp","notrim","index","Function","format","arg","trim","is","split","charCodeAt","output"],"mappings":";;;;;;;AAAAA,QACC,eACC,SAASC,GAGV,IAAIC,EAAc,6DAGdC,EAAc,SAASC,GAC1B,IAAIC,EAAID,EAAEE,OACV,OAAOL,EAAUG,EAAEG,UAAU,EAAGF,EAAI,IAAMD,EAAEG,UAAUF,EAAI,IAG3D,SAASG,EAAaC,GACrB,OAAOA,EAAIC,QAAQ,SAAU,KAG9B,SAASC,EAAQF,GAEhB,OAAkB,IADNA,EAAIG,QAAQ,WACA,KAAOC,KAAKJ,IAAiB,UAARA,GAW9C,SAASK,EAAKC,EAAKC,GAIlB,IAAIC,GAFJF,EAAMA,EAAIL,QAAQR,EAAaC,IAEfS,QAAQ,MACxB,IAAe,IAAXK,EACH,OAAIN,EAAQI,GAGFD,EAAK,UAAYN,EAAaO,IAAM,GAGjC,IAAIG,SAAS,YAAmC,IAAtBH,EAAIH,QAAQ,KAAc,wDAA0DO,OAAOJ,GAAOA,IAI1I,IAAIK,EAAML,EAAIR,UAAU,EAAGU,GAAOI,OAC9BZ,EAAMM,EAAIR,UAAUU,EAAQ,GAAGI,OAC/BC,GAAK,GAETF,EAAMA,EAAIV,QAAQ,YAAa,IAAIW,UAElCD,EAAMA,EAAIG,MAAM,MAGS,MAAtBd,EAAIe,WAAW,IAAeR,IACjCM,GAAK,EACLb,EAAMA,EAAIF,UAAU,EAAGE,EAAIH,OAAS,GAAGe,QAIxC,IAAII,GAAUH,EAAK,GAAK,WAAab,EACrC,OAAQW,EAAId,QACX,KAAK,EACJ,OAAO,IAAIY,SAASE,EAAI,GAAIK,GAC7B,KAAK,EACJ,OAAO,IAAIP,SAASE,EAAI,GAAIA,EAAI,GAAIK,GACrC,KAAK,EACJ,OAAO,IAAIP,SAASE,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIK,GAC7C,KAAK,EACJ,OAAO,IAAIP,SAASE,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIK,GACrD,KAAK,EACL,QACC,OAAO,IAAIP,SAASO,IAOvB,OAHAX,EAAKN,aAAeA,EACpBM,EAAKH,QAAUA,EAERG","file":"../../binding/func.js","sourcesContent":["define([\r\n\t\"./pathmaker\",\r\n],function(pathmaker){\r\n\r\n\t//'PLUGIN/method_name' or '@PLUGIN.method_name'\r\n\tvar REGFNPLUGIN = /[a-z0-9_-]+\\/[a-z0-9_]+\\(|(^|(?=[^a-z0-9]))@[a-z0-9-_]+\\./i;\r\n\r\n\r\n\tvar regfnplugin = function(v) {\r\n\t\tvar l = v.length;\r\n\t\treturn pathmaker(v.substring(0, l - 1)) + v.substring(l - 1);\r\n\t};\r\n\r\n\tfunction rebinddecode(val) {\r\n\t\treturn val.replace(/&#39;/g, '\\'');\r\n\t}\r\n\r\n\tfunction isValue(val) {\r\n\t\tvar index = val.indexOf('value');\r\n\t\treturn index !== -1 ? (((/\\W/).test(val)) || val === 'value') : false;\r\n\t}\r\n\r\n\r\n   /**\r\n   * Generates Function from expression of arrow function.\r\n   * @example var fn = func('n => n.toUpperCase()');\r\n   *          console.log(fn('peter')); //Output: PETER\r\n   * @param  {String} exp \r\n   * @return {Function} \r\n   */\r\n\tfunction func(exp, notrim) {  // W.FN = \r\n\r\n\t\texp = exp.replace(REGFNPLUGIN, regfnplugin);\r\n\r\n\t\tvar index = exp.indexOf('=>');\r\n\t\tif (index === -1) {\r\n\t\t\tif (isValue(exp))  {\r\n\t\t\t\t// func(\"value.toUpperCase()\") --> func(\"value=>value.toUpperCase()\")\r\n\t\t\t\t// func(\"plugin/method(value)\") --> func(\"value=>plugin/method(value)\")\r\n\t\t\t  \treturn func('value=>' + rebinddecode(exp), true) \r\n\t\t\t} else {\r\n\t\t\t\t// func(\"plugin/method(value)\")\r\n\t\t      \treturn new Function('return ' + (exp.indexOf('(') === -1 ? 'typeof({0})==\\'function\\'?{0}.apply(this,arguments):{0}'.format(exp) : exp));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar arg = exp.substring(0, index).trim();\r\n\t\tvar val = exp.substring(index + 2).trim();\r\n\t\tvar is = false;\r\n\r\n\t\targ = arg.replace(/\\(|\\)|\\s/g, '').trim();\r\n\t\tif (arg) {\r\n\t\t\targ = arg.split(',');\r\n\t\t}\r\n\r\n\t\tif (val.charCodeAt(0) === 123 && !notrim) {  // \"{\"\r\n\t\t\tis = true;\r\n\t\t\tval = val.substring(1, val.length - 1).trim();\r\n\t\t}\r\n\r\n\r\n\t\tvar output = (is ? '' : 'return ') + val;\r\n\t\tswitch (arg.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn new Function(arg[0], output);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn new Function(arg[0], arg[1], output);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn new Function(arg[0], arg[1], arg[2], output);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn new Function(arg[0], arg[1], arg[2], arg[3], output);\r\n\t\t\tcase 0:\r\n\t\t\tdefault:\r\n\t\t\t\treturn new Function(output);\r\n\t\t}\r\n\t};\r\n\r\n\tfunc.rebinddecode = rebinddecode;\r\n\tfunc.isValue = isValue;\r\n\r\n\treturn func;\r\n});"]}