{"version":3,"sources":["utils/envs.js"],"names":["define","langx","topic","KEY_ENV","REGENV","vars","replace","str","val","substring","length","String","prototype","env","this","$env","index","indexOf","variant","name","value","isObject","Object","keys","forEach","key","publish","undefined"],"mappings":";;;;;;;AAAAA,QACC,YACC,SAASC,GACV,IAAIC,EAAQD,EAAMC,MAEdC,EAAU,kBACbC,EAAS,cAcNC,KAqCJ,SAASC,EAAQC,GAChB,OAAOA,EAAID,QAAQF,EAAQ,SAASI,GACnC,OAAOH,EAAKG,EAAIC,UAAU,EAAGD,EAAIE,OAAS,KAAOF,IAenD,OAVAG,OAAOC,UAAUC,IAAM,WACtB,OAAOP,EAAQQ,OAGhBH,OAAOC,UAAUG,KAAO,WACvB,IACIC,EAAQF,KAAKG,QAAQ,KACzB,OAAkB,IAAXD,EAFIF,KAEgBD,MAFhBC,KAE6BL,UAAU,EAAGO,GAAOH,MAFjDC,KAE8DL,UAAUO,KAInFE,QArDD,SAAiBC,EAAMC,GAEtB,OAAInB,EAAMoB,SAASF,IAClBA,GAAQG,OAAOC,KAAKJ,GAAMK,QAAQ,SAASC,GAC1CpB,EAAKoB,GAAON,EAAKM,GACjBvB,EAAMwB,QAAQvB,EAASsB,EAAKN,EAAKM,MAE3BN,QAGMQ,IAAVP,GACHlB,EAAMwB,QAAQvB,EAASgB,EAAMC,GAEtBA,GAGDf,EAAKc,IAsCZb,QAAYA","file":"../../utils/envs.js","sourcesContent":["define([\r\n\t\"../langx\"\r\n],function(langx){\r\n\tvar topic = langx.topic;\r\n\r\n\tvar KEY_ENV = 'skylark.vmm.env',\r\n\t\tREGENV = /(\\[.*?\\])/gi;\r\n\r\n\t// The follow code is not used?\r\n\t//M.environment = function(name, version, language, env) {\r\n\t//\tM.$localstorage = name;\r\n\t//\tM.$version = version || '';\r\n\t//\tM.$language = language || '';\r\n\t//\tenv && ENV(env);\r\n\t//\treturn M;\r\n\t//};\r\n\r\n\r\n\r\n\t//var environment = MD.environment = {};\r\n\tvar vars = {};\r\n\r\n\tfunction variant(name, value) { // W.ENV\r\n\r\n\t\tif (langx.isObject(name)) {\r\n\t\t\tname && Object.keys(name).forEach(function(key) {\r\n\t\t\t\tvars[key] = name[key];\r\n\t\t\t\ttopic.publish(KEY_ENV, key, name[key]);  // EMIT\r\n\t\t\t});\r\n\t\t\treturn name;\r\n\t\t}\r\n\r\n\t\tif (value !== undefined) {\r\n\t\t\ttopic.publish(KEY_ENV, name, value); // EMIT\r\n\t\t\t//ENV[name] = value;\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\treturn vars[name];\r\n\t};\r\n\r\n\r\n\t/*\r\n\tSP.env = function() {\r\n\t\tvar self = this;\r\n\t\treturn self.replace(REGENV, function(val) {\r\n\t\t\treturn ENV[val.substring(1, val.length - 1)] || val;\r\n\t\t});\r\n\t};\r\n\r\n\tSP.$env = function() {\r\n\t\tvar self = this;\r\n\t\tvar index = this.indexOf('?');\r\n\t\treturn index === -1 ? self.env() : self.substring(0, index).env() + self.substring(index);\r\n\t};\r\n\t*/\r\n\r\n\tfunction replace(str) {\r\n\t\treturn str.replace(REGENV, function(val) {\r\n\t\t\treturn vars[val.substring(1, val.length - 1)] || val;\r\n\t\t});\t\t\r\n\t}\r\n\r\n\r\n\tString.prototype.env = function() {\r\n\t\treturn replace(this);\r\n\t};\r\n\r\n\tString.prototype.$env = function() {\r\n\t\tvar self = this;\r\n\t\tvar index = this.indexOf('?');\r\n\t\treturn index === -1 ? self.env() : self.substring(0, index).env() + self.substring(index);\r\n\t};\r\n\r\n\treturn {\r\n\t\t\"variant\" : variant,\r\n\t\t\"replace\" : replace \r\n\t}\r\n});"]}