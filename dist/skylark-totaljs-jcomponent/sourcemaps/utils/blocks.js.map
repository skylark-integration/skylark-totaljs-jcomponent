{"version":3,"sources":["utils/blocks.js"],"names":["define","localStorage","blocked","blocks","name","timeout","callback","key","item","now","Date","langx","isString","env","parseExpire","MD","localstorage","set","load","get","clean","is2","M","isPRIVATEMODE","setItem","$localstorage","JSON","stringify"],"mappings":";;;;;;;AAAAA,QACC,kBACC,SAASC,GACV,IAAIC,KACHC,GASDD,QAAiB,SAAUE,EAAMC,EAASC,GACzC,IAAIC,EAAMH,EACNI,EAAON,EAAQK,GACfE,EAAMC,KAAKD,MAEf,GAAID,EAAOC,EACV,OAAO,EAGJE,MAAMC,SAASP,KAClBA,EAAUA,EAAQQ,MAAMC,eAGbC,GAAGC,aAOf,OANAd,EAAQK,GAAOE,EAAMJ,EAGrBJ,EAAagB,IAAI,UAAWf,GAE5BI,GAAYA,KACL,GAGRY,KAAc,WAGbhB,EAAUD,EAAakB,IAAI,YAK5BC,MAAe,WACd,IAAK,IAAIb,KAAOL,EACXA,EAAQK,IAAQE,aACZP,EAAQK,GACfc,KAAM,GAIJN,GAAGC,cAAgBK,MAAQC,EAAEC,eAChCtB,EAAauB,QAAQF,EAAEG,cAAgB,WAAYC,KAAKC,UAAUzB,MAIpE,OAAOC","file":"../../utils/blocks.js","sourcesContent":["define([\r\n\t\"./localStorage\"\r\n],function(localStorage){\r\n\tvar blocked = {},\r\n\t\tblocks = {};\r\n\r\n   /**\r\n   * Lock some code for a specific time. \r\n   * This method will paths info about blocks in localStorage if the expiration is longer than 10 seconds.\r\n   * @param  {String} name   \r\n   * @param  {Number} timeout \r\n   * @param  {Function} callback  \r\n   */\r\n\tblocks.blocked = function (name, timeout, callback) { //W.BLOCKED = \r\n\t\tvar key = name;\r\n\t\tvar item = blocked[key];\r\n\t\tvar now = Date.now();\r\n\r\n\t\tif (item > now) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (langx.isString(timeout)) {\r\n\t\t\ttimeout = timeout.env().parseExpire();\r\n\t\t}\r\n\r\n\t\tvar local = MD.localstorage && timeout > 10000;\r\n\t\tblocked[key] = now + timeout;\r\n\t\t//if (!M.isPRIVATEMODE && local) { // W.isPRIVATEMODE\r\n\t\t  //localStorage.setItem(M.$localstorage + '.blocked', JSON.stringify(blocked));\r\n\t\tlocalStorage.set('blocked', blocked);\r\n\t\t//}\r\n\t\tcallback && callback();\r\n\t\treturn false;\r\n\t};\r\n\r\n\tblocks.load = function() {\r\n\t\t//clearTimeout($ready);\r\n\t\t//if (MD.localstorage) {\r\n\t\tblocked = localStorage.get('blocked');\r\n\r\n\t\t//M.loaded = true;  //TODO\r\n\t}\r\n\r\n\tblocks.clean = function() {\r\n\t\tfor (var key in blocked) {\r\n\t\t\tif (blocked[key] <= now) {\r\n\t\t\t\tdelete blocked[key];\r\n\t\t\t\tis2 = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (MD.localstorage && is2 && !M.isPRIVATEMODE)  // W.isPRIVATEMODE\r\n\t\t\tlocalStorage.setItem(M.$localstorage + '.blocked', JSON.stringify(blocked));\r\n\t\t\r\n\t}\r\n\r\n\treturn blocks;\r\n\r\n});"]}