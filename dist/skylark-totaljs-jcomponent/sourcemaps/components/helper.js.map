{"version":3,"sources":["components/helper.js"],"names":["define","$","ATTRSCOPE","fn","scope","this","length","data","$scopedata","el","closest"],"mappings":";;;;;;;AAAAA,QACC,2BACC,SAASC,GAEV,IAKCC,EAAY,gBA6IbD,EAAEE,GAAGC,MAAQ,WAEZ,IAAKC,KAAKC,OACT,OAAO,KAGR,IAAIC,EAAOF,KAAK,GAAGG,WACnB,GAAID,EACH,OAAOA,EAER,IAAIE,EAAKJ,KAAKK,QAAQ,IAAMR,EAAY,KACxC,OAAIO,EAAGH,SACNC,EAAOE,EAAG,GAAGD,YAELD,EAGF","file":"../../components/helper.js","sourcesContent":["define([\r\n\t\"skylark-utils-dom/query\"\r\n],function($){\r\n\r\n\tvar ATTRCOM = '[data-jc]',\r\n\t\tATTRURL = '[data-jc-url]',\r\n\t\tATTRDATA = 'jc',\r\n\t\tATTRDEL = 'data-jc-removed',\r\n\t\tATTRREL = 'data-jc-released',\r\n\t\tATTRSCOPE = 'data-jc-scope';\r\n\r\n\r\n\tvar REGCOM = /(data-jc|data-jc-url|data-jc-import|data-bind|bind):|COMPONENT\\(/;\r\n\r\n\r\n\tfunction attrcom(el, name) {\r\n\t\tname = name ? '-' + name : '';\r\n\t\treturn el.getAttribute ? el.getAttribute('data-jc' + name) : el.attrd('jc' + name);\r\n\t}\r\n\r\n\tfunction initscopes(scopes) {\r\n\r\n\t\tvar scope = scopes[scopes.length - 1];\r\n\t\tif (scope.$scopedata) {\r\n\t\t\treturn scope.$scopedata;\r\n\t\t}\r\n\r\n\t\tvar path = attrcom(scope, 'scope');\r\n\t\tvar independent = path.substring(0, 1) === '!';\r\n\r\n\t\tif (independent) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\r\n\t\tvar arr = [scope];\r\n\t\tif (!independent) {\r\n\t\t\tfor (var i = scopes.length - 1; i > -1; i--) {\r\n\t\t\t\tarr.push(scopes[i]);\r\n\t\t\t\tif (scopes[i].getAttribute(ATTRSCOPE).substring(0, 1) === '!') {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar absolute = '';\r\n\r\n\t\tarr.length && arr.reverse();\r\n\r\n\t\tfor (var i = 0, length = arr.length; i < length; i++) {\r\n\r\n\t\t\tvar sc = arr[i];\r\n\t\t\tvar p = sc.$scope || attrcom(sc, 'scope');\r\n\r\n\t\t\tsc.$initialized = true;\r\n\r\n\t\t\tif (sc.$processed) {\r\n\t\t\t\tabsolute = p;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tsc.$processed = true;\r\n\t\t\tsc.$isolated = p.substring(0, 1) === '!';\r\n\r\n\t\t\tif (sc.$isolated) {\r\n\t\t\t\tp = p.substring(1);\r\n\t\t\t}\r\n\r\n\t\t\tif (!p || p === '?')\r\n\t\t\t\tp = GUID(25).replace(/\\d/g, '');\r\n\r\n\t\t\tif (sc.$isolated) {\r\n\t\t\t\tabsolute = p;\r\n\t\t\t} else {\r\n\t\t\t\tabsolute += (absolute ? '.' : '') + p;\r\n\t\t\t}\r\n\r\n\t\t\tsc.$scope = absolute;\r\n\t\t\tvar d = new Scope();\r\n\t\t\td._id = d.ID = d.id = GUID(10);\r\n\t\t\td.path = absolute;\r\n\t\t\td.elements = arr.slice(0, i + 1);\r\n\t\t\td.isolated = sc.$isolated;\r\n\t\t\td.element = $(arr[0]);\r\n\t\t\tsc.$scopedata = d;\r\n\r\n\t\t\tvar tmp = attrcom(sc, 'value');\r\n\t\t\tif (tmp) {\r\n\t\t\t\tvar fn = new Function('return ' + tmp);\r\n\t\t\t\tdefaults['#' + HASH(p)] = fn; // paths by path (DEFAULT() --> can reset scope object)\r\n\t\t\t\ttmp = fn();\r\n\t\t\t\tset(p, tmp);\r\n\t\t\t\temitwatch(p, tmp, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Applies classes\r\n\t\t\tvar cls = attrcom(sc, 'class');\r\n\t\t\tif (cls) {\r\n\t\t\t\t(function(cls) {\r\n\t\t\t\t\tcls = cls.split(' ');\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tvar el = $(sc);\r\n\t\t\t\t\t\tfor (var i = 0, length = cls.length; i < length; i++) {\r\n\t\t\t\t\t\t\tel.tclass(cls[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 5);\r\n\t\t\t\t})(cls);\r\n\t\t\t}\r\n\r\n\t\t\ttmp = attrcom(sc, 'init');\r\n\t\t\tif (tmp) {\r\n\t\t\t\ttmp = scopes.get(tmp);\r\n\t\t\t\tif (tmp) {\r\n\t\t\t\t\tvar a = current_owner;\r\n\t\t\t\t\tcurrent_owner = 'scope' + d._id;\r\n\t\t\t\t\ttmp.call(d, p, $(sc));\r\n\t\t\t\t\tcurrent_owner = a;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn scope.$scopedata;\r\n\t}\r\n\r\n\r\n\t// find all nested component\r\n\tfunction nested(el) {\r\n\t\tvar $el = $(el),\r\n\t\t\tarr = [];\r\n\t\t$el.find(ATTRCOM).each(function() {\r\n\t\t\tvar el = $(this);\r\n\t\t\tvar com = el[0].$com;\r\n\t\t\tif (com && !el.attr(ATTRDEL)) {\r\n\t\t\t\tif (com instanceof Array) {\r\n\t\t\t\t\tarr.push.apply(arr, com);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarr.push(com);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn arr;\r\n\t}\r\n\r\n\t// destory all nested component\r\n\tfunction kill(el) {\r\n\t\tvar $el = $(el);\r\n\t\t$el.removeData(ATTRDATA);\r\n\t\t$el.attr(ATTRDEL, 'true').find(ATTRCOM).attr(ATTRDEL, 'true');\r\n\t}\r\n\r\n\r\n\t$.fn.scope = function() {\r\n\r\n\t\tif (!this.length) {\r\n\t\t\treturn null; \r\n\t\t}\r\n\r\n\t\tvar data = this[0].$scopedata;\r\n\t\tif (data) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\tvar el = this.closest('[' + ATTRSCOPE + ']');\r\n\t\tif (el.length) {\r\n\t\t\tdata = el[0].$scopedata;\r\n\t\t\tif (data) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n});"]}